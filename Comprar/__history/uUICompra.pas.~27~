unit uUICompra;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs, FMX.StdCtrls,
  FMX.Objects, FMX.Edit, FMX.Controls.Presentation, FMX.Layouts,
  Data.Bind.Controls, Fmx.Bind.Navigator, Data.DB,
  uCompraClass;

type
  TfrmUICompra = class(TForm)
    Layout1: TLayout;
    layTotales: TLayout;
    Rectangle1: TRectangle;
    reInput: TRectangle;
    layConfirmarDelete: TLayout;
    lnNombre: TLine;
    lblNombre: TLabel;
    edtNombre: TEdit;
    lnCantidad: TLine;
    lblCantidad: TLabel;
    edtCantidad: TEdit;
    lnlCosto: TLine;
    lblCosto: TLabel;
    edtCosto: TEdit;
    lnVenta: TLine;
    lblVenta: TLabel;
    edtVenta: TEdit;
    Circle1: TCircle;
    layInput: TLayout;
    Image1: TImage;
    edtActivo: TCheckBox;
    edtVerSoloActivos: TCheckBox;
    Layout4: TLayout;
    Layout5: TLayout;
    Layout6: TLayout;
    Line1: TLine;
    Label1: TLabel;
    edtImporteCosto: TEdit;
    Line2: TLine;
    Label2: TLabel;
    edtImporteVenta: TEdit;
    Line3: TLine;
    Label3: TLabel;
    edtGanancia: TEdit;
    layNavigator: TLayout;
    Image2: TImage;
    imgFirst: TImage;
    imgPrior: TImage;
    Rectangle2: TRectangle;
    imgNext: TImage;
    imgLast: TImage;
    imgAdd: TImage;
    imgDelete: TImage;
    Circle2: TCircle;
    layNavLeft: TLayout;
    layNavCenter: TLayout;
    Layout2: TLayout;
    Label4: TLabel;
    recConfirmar: TRectangle;
    lblConfirmar: TLabel;
    procedure edtNombreKeyDown(Sender: TObject; var Key: Word;
      var KeyChar: Char; Shift: TShiftState);
    procedure edtCantidadKeyDown(Sender: TObject; var Key: Word;
      var KeyChar: Char; Shift: TShiftState);
    procedure edtCostoKeyDown(Sender: TObject; var Key: Word; var KeyChar: Char;
      Shift: TShiftState);
    procedure edtVentaKeyDown(Sender: TObject; var Key: Word; var KeyChar: Char;
      Shift: TShiftState);
    procedure FormCreate(Sender: TObject);
    procedure Image1Click(Sender: TObject);
    procedure edtCantidadKeyUp(Sender: TObject; var Key: Word;
      var KeyChar: Char; Shift: TShiftState);
    procedure edtVentaKeyUp(Sender: TObject; var Key: Word; var KeyChar: Char;
      Shift: TShiftState);
    procedure edtCostoKeyUp(Sender: TObject; var Key: Word; var KeyChar: Char;
      Shift: TShiftState);
    procedure Image2Click(Sender: TObject);
    procedure imgDeleteClick(Sender: TObject);
    procedure recConfirmarClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure edtVerSoloActivosChange(Sender: TObject);
  private
    { Private declarations }
    cantidad: integer;
    costo,venta: real;

    datasetActive: TDataSet;
    compra: TCompra;

    procedure ActualizaControles;
    procedure ActualizaCompra;
    procedure CalculaTotales;
  public
    { Public declarations }
  end;

var
  frmUICompra: TfrmUICompra;

implementation

{$R *.fmx}

uses uModulo, uMain;

procedure TfrmUICompra.edtNombreKeyDown(Sender: TObject; var Key: Word;
  var KeyChar: Char; Shift: TShiftState);
begin
     if Key = vkreturn then  edtCantidad.SetFocus;
end;



procedure TfrmUICompra.ActualizaCompra;
begin
       compra.Cantidad      := cantidad;
       compra.Costo         := costo;
       compra.Venta         := venta;
end;

procedure TfrmUICompra.ActualizaControles;
begin
      if datasetActive.Bof and datasetActive.Eof then begin
          edtNombre.Text   := '';
          edtCantidad.Text := '';
          edtCosto.Text    := '';
          edtVenta.Text    := '';

          cantidad := 0;
          costo    := 0.00;
          venta    := 0.00;
      end
      else begin
          edtNombre.Text   := datasetActive.FieldValues['Nombre'];
          edtCantidad.Text := datasetActive.FieldByName('Cantidad').AsString;
          edtCosto.Text    := datasetActive.FieldByName('Costo').AsString;
          edtVenta.Text    := datasetActive.FieldByName('Venta').AsString;

          cantidad := datasetActive.FieldValues['Cantidad'];
          costo    := datasetActive.FieldValues['Costo'];
          venta    := datasetActive.FieldValues['Venta'];
      end;

end;

procedure TfrmUICompra.CalculaTotales;
begin
       edtImporteCosto.Text := FormatFloat('#,###,##0.00',compra.ImporteCosto);
       edtImporteVenta.Text := FormatFloat('#,###,##0.00',compra.ImporteVenta);
       edtGanancia.Text     := FormatFloat('#,###,##0.00',compra.Ganancia);
end;

procedure TfrmUICompra.edtCantidadKeyDown(Sender: TObject; var Key: Word;
  var KeyChar: Char; Shift: TShiftState);
begin

     if Key = vkreturn then begin
         try
            if trim(edtCantidad.Text) = '' then
                 cantidad := 0
            else
                 cantidad := StrToInt(edtCantidad.Text);

            CalculaTotales;
         except
            ShowMessage('Error, la cantidad es un Número entero');
         end;

         edtCosto.SetFocus;
     end
     else
         if not (KeyChar in [#8,'0'..'9']) then
              KeyChar := #0;

end;

procedure TfrmUICompra.edtCantidadKeyUp(Sender: TObject; var Key: Word;
  var KeyChar: Char; Shift: TShiftState);
begin
      if edtCantidad.Text.Length > 0 then
          cantidad := StrToInt(edtCantidad.Text);
end;

procedure TfrmUICompra.edtCostoKeyDown(Sender: TObject; var Key: Word;
  var KeyChar: Char; Shift: TShiftState);
var
 compra: TCompra;
begin
     if Key = vkreturn then begin
         try
            if trim(edtCosto.Text) = '' then
                 costo := 0
            else
                 costo := StrToFloat(edtCosto.Text);

            compra.Cantidad      := cantidad;
            compra.Costo         := costo;
            compra.Venta         := venta;

            edtImporteCosto.Text := FormatFloat('#,###,##0.00',compra.ImporteCosto);
            edtGanancia.Text     := FormatFloat('#,###,##0.00',compra.Ganancia);
         except
            ShowMessage('Error, el Costo es un Número');
         end;

         edtVenta.SetFocus;
     end
     else
         if not (KeyChar in [#8,'.','0'..'9']) then
             KeyChar := #0;
end;


procedure TfrmUICompra.edtCostoKeyUp(Sender: TObject; var Key: Word;
  var KeyChar: Char; Shift: TShiftState);
begin
     costo := StrToFloat(edtCosto.Text);
end;

procedure TfrmUICompra.edtVentaKeyDown(Sender: TObject; var Key: Word;
  var KeyChar: Char; Shift: TShiftState);
var
 compra: TCompra;
begin
     if Key = vkreturn then begin
         try
            if trim(edtVenta.Text) = '' then
                 venta := 0
            else
                 venta := StrToFloat(edtVenta.Text);

            compra.Cantidad      := cantidad;
            compra.Costo         := costo;
            compra.Venta         := venta;

            edtImporteVenta.Text := FormatFloat('#,###,##0.00',compra.ImporteVenta);
            edtGanancia.Text     := FormatFloat('#,###,##0.00',compra.Ganancia);
         except
            ShowMessage('Error, la Venta es un Número');
         end;

         edtNombre.SetFocus;
     end
     else
         if not (KeyChar in [#8,'.','0'..'9']) then
             KeyChar := #0;

end;

procedure TfrmUICompra.edtVentaKeyUp(Sender: TObject; var Key: Word;
  var KeyChar: Char; Shift: TShiftState);
begin
     venta := StrToFloat(edtVenta.Text);
end;

procedure TfrmUICompra.edtVerSoloActivosChange(Sender: TObject);
begin
      //Establesco el Dataset Activo
      with frmModulo do
        if edtVerSoloActivos.IsChecked then
            datasetActive := qrCompraActivos
        else
            datasetActive := qrCompraTodos;

      datasetActive.First;
end;

procedure TfrmUICompra.FormActivate(Sender: TObject);
begin
     cantidad := 0;
     costo    := 0.00;
     venta    := 0.00;

     edtImporteCosto.text := '0.00';
     edtImporteVenta.text := '0.00';
     edtGanancia.text     := '0.00';

     //Establesco el Dataset Activo
     with frmModulo do
        if edtVerSoloActivos.IsChecked then
            datasetActive := qrCompraActivos
        else
            datasetActive := qrCompraTodos;

     datasetActive.First;
end;

procedure TfrmUICompra.FormCreate(Sender: TObject);
begin
     cantidad := 0;
     costo    := 0.00;
     venta    := 0.00;

     //edtCantidad.Text := '0';
     //edtCosto.Text    := '0.00';
     //edtVenta.Text    := '0.00';

     edtImporteCosto.text := '0.00';
     edtImporteVenta.text := '0.00';
     edtGanancia.text     := '0.00';
end;

procedure TfrmUICompra.Image1Click(Sender: TObject);
var
 compra: TCompra;
 mensaje: string;
begin
      //mensaje := 'Cantidad: ' + IntToStr(cantidad) + ', Costo: ' + FloatToStr(costo) + ', Venta: ' + FloatToStr(venta);
      //ShowMessage(mensaje);
      compra.Cantidad      := cantidad;
      compra.Costo         := costo;
      compra.Venta         := venta;

      edtImporteCosto.Text := FormatFloat('#,###,##0.00',compra.ImporteCosto);
      edtImporteVenta.Text := FormatFloat('#,###,##0.00',compra.ImporteVenta);
      edtGanancia.Text     := FormatFloat('#,###,##0.00',compra.Ganancia);
end;

procedure TfrmUICompra.Image2Click(Sender: TObject);
begin
     Self.Close;
end;

procedure TfrmUICompra.imgDeleteClick(Sender: TObject);
begin
      recConfirmar.Visible := True;
end;

procedure TfrmUICompra.recConfirmarClick(Sender: TObject);
begin
      recConfirmar.Visible := False;
end;

end.
